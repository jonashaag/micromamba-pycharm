#!/usr/bin/env python3

import os
import sys
import json
import subprocess


ENABLE_LOGGING = True


PASSTHROUGH_PREFIXES = [
    ["env", "list", "--json"],
    ["run"],
    ["create"],
    ["install"],
    ["list"],
]


def micromamba(*cmd):
    cmd = [x for x in cmd if x != "--no-capture-output"]
    out = subprocess.check_output(["micromamba"] + cmd)
    return out.decode(sys.getdefaultencoding())


def micromamba_json(*cmd):
    return json.loads(micromamba(*cmd, "--json"))


def print_json(data):
    print(json.dumps(data, indent=4))


if ENABLE_LOGGING:
    open("/tmp/conda-wrapper-log", "a").write(str(sys.argv[1:]) + "\n")

if sys.argv[1:4] == ["info", "--envs", "--json"]:
    base_env = micromamba_json("info", "--json")["base environment"]
    print_json(
        {
            "envs_dirs": [base_env],
            "conda_prefix": base_env,
            "envs": micromamba_json("env", "list")["envs"],
        }
    )
elif sys.argv[1] == "list":
    if sys.argv[-1] == "-e":
        out = micromamba_json(*sys.argv[1:-1])
        print(
            "\n".join(
                f'{pkg["name"]}={pkg["version"]}={pkg["build_string"]}' for pkg in out
            )
        )
    else:
        out = micromamba(*sys.argv[1:])
        ignore_lines = ["List of packages in environment"]
        lines = (l.strip() for l in out.splitlines() if l.startswith(" ") and not l.startswith("  Name"))
        print("\n".join(lines))
elif any(sys.argv[1:len(prefix)+1] == prefix for prefix in PASSTHROUGH_PREFIXES):
    os.execlp("micromamba", *sys.argv)
else:
    raise NotImplementedError(str(sys.argv[1:]))
