#!/usr/bin/env python3

import sys
import json
import subprocess


ENABLE_LOGGING = True


def micromamba(*cmd, as_json=True):
    cmd = [x for x in cmd if x != "--no-capture-output"]
    if as_json:
        cmd.append("--json")
    out = subprocess.check_output(["micromamba"] + cmd, text=True)
    if as_json:
        return json.loads(out)
    else:
        return out


def print_json(data):
    print(json.dumps(data))


if ENABLE_LOGGING:
    open("/tmp/conda-wrapper-log", "a").write(str(sys.argv[1:]) + "\n")

if sys.argv[1:4] == ["info", "--envs", "--json"]:
    base_env = micromamba("info", "--json")["base environment"]
    print_json(
        {
            "envs_dirs": [base_env],
            "conda_prefix": base_env,
            "envs": micromamba("env", "list")["envs"],
        }
    )
elif sys.argv[1:4] == ["env", "list", "--json"]:
    print(micromamba(*sys.argv[1:]))
elif sys.argv[1] == "list":
    if sys.argv[-1] == "-e":
        out = micromamba(*sys.argv[1:-1])
        print(
            "\n".join(
                f'{pkg["name"]}={pkg["version"]}={pkg["build_string"]}' for pkg in out
            )
        )
    else:
        out = micromamba(*sys.argv[1:], as_json=False)
        lines = (l.strip() for l in out.splitlines())
        ignore_lines = ("List of packages in environment", "Name ", "â”€")
        lines = (l for l in lines if l and not l.startswith(ignore_lines))
        print("\n".join(lines))
elif sys.argv[1] in ["run", "create", "install", "list"]:
    print(micromamba(*sys.argv[1:], as_json=False))
else:
    raise NotImplementedError(str(sys.argv[1:]))
